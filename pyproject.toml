# Copyright (c) Meta Platforms, Inc. and affiliates.
# All rights reserved.

# This source code is licensed under the license found in the
# LICENSE file in the root directory of this source tree.

[tool.poetry]
name = "lean_universe"
version = "0.2.0"
description = "LeanUniverse: A Modern Library for Consistent and Scalable Lean4 Dataset Management with AI Integration."
authors = ["Aram H. Markosyan <amarkos@meta.com>"]
readme = "README.md"
packages = [{include = "lean_universe"}]
keywords = ["lean4", "formal-verification", "dataset", "machine-learning", "ai", "theorem-proving"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
# Core dependencies
pydantic = "^2.8.0"
pydantic-settings = "^2.2.0"
click = "^8.1.7"
rich = "^13.7.0"
structlog = "^24.1.0"

# Basic utilities
tqdm = "^4.66.5"
psutil = "^6.0.0"

# Configuration and validation
typeguard = "^4.3.0"

# Testing and quality
pytest = "^8.0.0"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"

# Development tools
pre-commit = "^3.8.0"
black = "^24.2.0"
isort = "^5.13.2"
flake8 = "^7.0.0"
mypy = "^1.8.0"

# CLI and UI
typer = "^0.9.0"

# Additional dependencies
httpx = "^0.27.0"
aiofiles = "^24.1.0"
pygithub = "^2.4.0"
gitpython = "^3.1.42"
dulwich = "^0.21.7"
lean-dojo = {git = "https://github.com/lean-dojo/LeanDojo.git"}
asyncio-throttle = "^1.0.2"
tenacity = "^9.1.2"

[tool.poetry.group.dev.dependencies]
# Additional development dependencies
jupyter = "^1.0.0"
ipython = "^8.21.0"

[tool.poetry.group.test.dependencies]
# Test-specific dependencies
coverage = "^7.4.3"

[tool.poetry.scripts]
lean-universe = "lean_universe.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["lean_universe"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
